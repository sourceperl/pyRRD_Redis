#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import matplotlib.animation as animation
from pyRRD_Redis import RRD_redis
import argparse
import datetime


def rrd2xy(rrd_name, size):
    rrd = RRD_redis(rrd_name)
    x = []
    y = []
    for rrv in rrd.get(size=size):
        x.append(datetime.datetime.fromtimestamp(rrv.timestamp))
        y.append(rrv.value)
    return x, y


def animate(i):
    # wipe and redraw
    axe.clear()
    if args.unit:
        axe.set_ylabel(args.unit)
    # set Y limit(s)
    if args.top is not None:
        axe.set_ylim(top=args.top)
    if args.bottom is not None:
        axe.set_ylim(bottom=args.bottom)
    # plot lines
    for t_name in args.tag_name:
        # PID out
        (x, y) = rrd2xy('rrd:' + t_name, size=args.number)
        axe.xaxis.set_major_formatter(mdates.DateFormatter('%H:%M'))
        axe.plot(x, y, label=t_name)
    # set legend
    axe.legend()

# parse args
parser = argparse.ArgumentParser()
parser.add_argument('tag_name', type=str, nargs='+', help='tag name like L1_M_WOBBE')
parser.add_argument('-f', '--fix', action='store_true', help='fix mode (don\'t animate graph)')
parser.add_argument('-u', '--unit', type=str, help='unit like \'wh/nm3\'')
parser.add_argument('-t', '--top', type=float, help='max value of Y axe', default=None)
parser.add_argument('-b', '--bottom', type=float, help='min value of Y axe', default=None)
parser.add_argument('-n', '--number', type=int, help='number of RRD samples from now', default=360)
args = parser.parse_args()
# configure plot
fig, axe = plt.subplots(nrows=1, ncols=1)
# set title
fig.canvas.set_window_title('rrd2plot')
# animate graph or not (just one animate() call)
if args.fix:
    animate(None)
else:
    ani = animation.FuncAnimation(fig, animate, interval=1000)
fig.autofmt_xdate()
plt.show()
